#include <stdio.h>
#include <string.h>
#include <ctype.h>

char keyTable[5][5];

void createKeyMatrix(char key[]) {
    int used[26] = {0}, i, k = 0;
    for (i = 0; key[i]; i++) {
        char ch = toupper(key[i] == 'J' ? 'I' : key[i]);
        if (!used[ch - 'A']) {
            keyTable[k / 5][k % 5] = ch;
            used[ch - 'A'] = 1;
            k++;
        }
    }
    for (char ch = 'A'; ch <= 'Z'; ch++) {
        if (ch == 'J' || used[ch - 'A']) continue;
        keyTable[k / 5][k % 5] = ch;
        k++;
    }
}

void findPos(char c, int *x, int *y) {
    for (int i = 0; i < 5; i++)
        for (int j = 0; j < 5; j++)
            if (keyTable[i][j] == c) *x = i, *y = j;
}

void encrypt(char text[]) {
    int i, r1, c1, r2, c2;
    for (i = 0; text[i]; i += 2) {
        findPos(text[i], &r1, &c1);
        findPos(text[i + 1], &r2, &c2);
        if (r1 == r2)
            printf("%c%c", keyTable[r1][(c1 + 1) % 5], keyTable[r2][(c2 + 1) % 5]);
        else if (c1 == c2)
            printf("%c%c", keyTable[(r1 + 1) % 5][c1], keyTable[(r2 + 1) % 5][c2]);
        else
            printf("%c%c", keyTable[r1][c2], keyTable[r2][c1]);
    }
    printf("\n");
}

int main() {
    char key[50], msg[100], clean[100] = "";
    int i, j = 0;

    printf("Key: "); scanf("%s", key);
    printf("Message: "); scanf("%s", msg);

    for (i = 0; msg[i]; i++) {
        char ch = toupper(msg[i] == 'J' ? 'I' : msg[i]);
        if (isalpha(ch)) {
            clean[j++] = ch;
            if (j > 0 && clean[j - 1] == clean[j - 2]) clean[j - 1] = 'X', clean[j++] = ch;
        }
    }
    if (j % 2 != 0) clean[j++] = 'X';
    clean[j] = '\0';

    createKeyMatrix(key);
    printf("Encrypted: ");
    encrypt(clean);

    return 0;
}
